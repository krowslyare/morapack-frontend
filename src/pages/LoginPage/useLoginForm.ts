// Este hook maneja la l√≥gica del formulario de login:
// - Controla el estado de carga (isLoading)
// - Captura los datos del formulario al enviarlo
// - Simula un proceso de autenticaci√≥n (login)
// - Muestra mensajes toast en lugar de alertas nativas

import { type FormEvent, useState } from 'react'
import { toast } from 'react-toastify' // ‚úÖ Importar react-toastify

export function useLoginForm() {
  const [isLoading, setIsLoading] = useState(false) // Estado del bot√≥n o proceso de login

  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault() // Evita que el formulario recargue la p√°gina
    setIsLoading(true) // Activa el estado de "cargando"

    try {
      // Extraer los datos del formulario
      const formData = new FormData(e.currentTarget)
      const email = formData.get('email') as string
      const password = formData.get('password') as string
      const remember = formData.get('remember') === 'on'

      console.log('Intento de inicio de sesi√≥n:', { email, password, remember })

      // Validar campos vac√≠os
      if (!email || !password) {
        toast.warn('Por favor, complete todos los campos.')
        return
      }

      // üí° Simulaci√≥n de llamada a API
      await new Promise((resolve) => setTimeout(resolve, 1000)) // Simula retardo

      // üß© Simulamos validaci√≥n de usuario:
      const fakeUser = {
        email: 'admin@example.com',
        password: '123456',
      }

      // Verificamos si las credenciales coinciden con el usuario simulado
      const isAuthenticated = email === fakeUser.email && password === fakeUser.password

      if (!isAuthenticated) {
        // ‚ùå Error de credenciales
        toast.error('Usuario y/o contrase√±a son incorrectos')
        return
      }

      // ‚úÖ Inicio de sesi√≥n exitoso
      toast.success(`Bienvenido, ${email}!`)

      // Redirecci√≥n simulada (opcional)
      // window.location.href = '/dashboard'
    } catch (error) {
      console.error('Error durante el login:', error)
      toast.error('Ocurri√≥ un error inesperado al iniciar sesi√≥n.')
    } finally {
      setIsLoading(false) // Desactiva el estado de carga
    }
  }

  return {
    isLoading,
    handleSubmit,
  }
}
